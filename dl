#!/usr/bin/env ruby
require 'open-uri'
require 'nokogiri'

LOG_FILE = './log'

def log(message)
  time_message = "#{Time.now.to_s} #{message}\n"
  puts time_message
  open(File.join(File.dirname(__FILE__), LOG_FILE), 'a') { |file|
    file.puts(time_message)
  }
end

begin
  dl_dir = ARGV[0] || '/shirai/anime/~dl/'
  shows_list = File.open(File.join(File.dirname(__FILE__), 'shows'), 'r').select {|str| !str.start_with? '#'}.map do |str|
    split = str.chop.split('#')
    [split[0], split[3..]]
  end

  feed = open('https://nyaa.si/?page=rss') {|rss| Nokogiri.parse(rss)}
  # File.open(File.join(File.dirname(__FILE__), Time.now.to_s.gsub(':', "-")), 'w') {|file| file.write feed.to_s}

  last_pub = Time.parse(File.open(File.join(File.dirname(__FILE__), 'last_pub'), 'r').read) rescue nil
  shows = feed.xpath('//rss/channel/item')
  trusted_shows = shows.select {|show|
  	# show.at('//nyaa|trusted').text == 'Yes'
    show.at('//nyaa|trusted').text == 'Yes' && last_pub != nil && Time.parse(show.at('pubdate').text) > last_pub
  }.map { |show|
  	{
  		title: show.at('title').text,
  		link: show.at('link').next_sibling.text.strip
  	}
  }
  log "[dl] Searching"
  File.open(File.join(File.dirname(__FILE__), 'last_pub'), 'w') {|file| file.write Time.now.to_s}
  filtered = trusted_shows.filter { |show|shows_list.any? { |title|
    show[:title].include?(title[0]) && title[1].all? {|bits| show[:title].include? bits}}
  }.each do |show|
    log "[dl] Downloading #{show[:title]} : #{show[:link]}"
    `transmission-cli -w #{dl_dir} #{show[:link]} `
  end

rescue StandardError => e
  log "[dl] ERROR - #{e}"
end
